<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.mapper.UserMapper">

    <select id="selectById" resultType="SysUser">
		select * from sys_user where
		id = #{id}
	</select>


    <select id="selectAll" resultType="SysUser">
		select
		id,user_name,user_password,user_email,user_info,head_img,create_time
		from sys_user
	</select>

    <select id="selectRolesByUserId" resultType="SysRole">
		select
		r.*,u.user_name "sysUser.userName" from sys_user u
		inner join
		sys_user_role ur on u.id=ur.user_id
		inner join sys_role r on
		ur.role_id=r.id

	</select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert
		into sys_user(
		user_name,user_password,user_email,user_info,head_img,create_time
		)
		values(
		#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP}
		)
	</insert>


    <insert id="insert2">
        insert into sys_user(
        user_name,user_password,user_email,user_info,head_img,create_time
        )
        values(
        #{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP}
        )
        <selectKey keyColumn="id" resultType="Long" keyProperty="id"
                   order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <select id="selectRolesByUserIdAndRoleEnabled"
            resultType="SysRole">
		select r.* from sys_user u
		inner join sys_user_role ur on
		u.id=ur.user_id
		inner join sys_role r on
		ur.role_id=r.id
		where
		u.id=#{userId} and r.enabled=#{enabled}
	</select>


    <select id="selectByUser" resultType="SysUser">
        select *
        from sys_user
        <where>
            <if test="userName != null and userName != ''">
                and user_name like concat('%',#{userName},'%')
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email like concat('%',#{userEmail},'%')
            </if>
        </where>
    </select>


    <select id="selectByIdOrUserName" resultType="SysUser">
        select *
        from sys_user
        where 1=1
        <choose>
            <when test="id != null">
                and id=#{id}
            </when>
            <when test="userName != null and userName != ''">
                and user_name = #{userName}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>

    </select>

    <select id="selectByMap" resultType="SysUser">
        select * from sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email = #{userEmail}
            </if>
            <if test="createTime != null">
                and create_time &lt; #{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>

    </select>


    <select id="selectByIdList" resultType="SysUser">
        select id,user_name,user_password,user_email,user_info,head_img,create_time
        from sys_user
        where id in
        <foreach collection="idList" open="(" close=")" separator="," item="id" index="i">
            ${id}
        </foreach>
    </select>

    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user
        (user_name,user_password,user_email,user_info,head_img,create_time)
        values
        <foreach collection="list" item="user" separator=",">
            (
            #{user.userName},#{user.userPassword},#{user.userEmail},#{user.userInfo},#{user.headImg,jdbcType=BLOB},#{user.createTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <update id="updateByMap">
        update sys_user
        set
        <foreach collection="_parameter" item="val" index="key" separator=",">
            ${key} = #{val}
        </foreach>
        where
        id = #{id}

    </update>


</mapper>